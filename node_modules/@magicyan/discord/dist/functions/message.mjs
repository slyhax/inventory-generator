import { equalsIgnoreCase, includesIgnoreCase } from '@magicyan/core';

function findMessage(channel) {
  const messages = channel.messages.cache;
  return {
    async all(limit = Infinity) {
      const messages2 = [];
      let lastMessageId;
      while (true) {
        const fetched = await channel.messages.fetch({ limit: 100, before: lastMessageId });
        messages2.push(...fetched.values());
        lastMessageId = fetched.lastKey();
        if (fetched.size < 100 || messages2.length >= limit)
          break;
      }
      if (limit < messages2.length) {
        const sliced = messages2.slice(0, limit);
        messages2.length = 0;
        messages2.push(...sliced);
      }
      return messages2;
    },
    byId(id) {
      return messages.get(id);
    },
    byContent() {
      return {
        equals(content, ignoreCase = false) {
          return ignoreCase ? messages.find((m) => m.content === content) : messages.find((m) => equalsIgnoreCase(m.content, content));
        },
        include(content, ignoreCase = false) {
          return ignoreCase ? messages.find((m) => m.content.includes(content)) : messages.find((m) => includesIgnoreCase(m.content, content));
        }
      };
    },
    byFilter(filter) {
      return messages.find(filter);
    }
  };
}
function getMessageUrlInfo(url) {
  const regex = new RegExp(/^https:\/\/discord\.com\/channels\/\d+\/\d+\/\d+$/);
  if (!regex.test(url))
    return {};
  const [messageId, channelId, guildId] = url.split("/").reverse();
  return { messageId, channelId, guildId };
}

export { findMessage, getMessageUrlInfo };
